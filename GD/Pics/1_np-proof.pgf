\usetikzlibrary{intersections,arrows}
\begin{tikzpicture}[]

\node[draw,circle] (L) at (0,0) {$L$};
\node[draw,circle] (L') at (9,-4) {$L'$};
\node[draw,circle] (NP) at (0,-4) {$\mathcal{NP}$};

\draw[->,>=latex,color=blue](L)to[out=0,in=90] node[text width=6cm,left,xshift=2.5cm,yshift=-2cm]{Ein Algorithmus, der $L$ in polynomieller Zeit l\"ost, w\"urde $L'$ in polynomieller Zeit l\"osen.}(L');
\draw[->,>=latex,color=green!60!black](L')to[out=80,in=320](8.25,-0.75) to[out=145,in=10] node[text width=6.5cm,right,xshift=4.75cm,yshift=-2cm]{$\geq p \Rightarrow L$ ist in polynomieller Zeit reduzierbar auf $L'$:\\ f\"ur jede Instanz $I'$ von $L'$ gibt es eine Instanz $I$ von $L$ (in polynomieller Zeit!), so dass $I'$ ist wahr $\Leftrightarrow$ $I$ ist wahr}(L);
\draw[->,>=latex,color=orange](L)to node[text width=3.5cm,right,xshift=0cm,yshift=1cm]{$L$ ist $\mathcal{NP}$-schwer}(NP);
\draw[->,>=latex,color=purple](L')to[out=180,in=0] node[text width=10cm,below,xshift=1cm,yshift=-0.5cm]{bekannt: gibt es einen Polynomial-Zeit-Algorithmus, der $L'$ löst, können alle Probleme in $\mathcal{NP}$ in Polynomial-Zeit gelöst werden}(NP);
\end{tikzpicture}